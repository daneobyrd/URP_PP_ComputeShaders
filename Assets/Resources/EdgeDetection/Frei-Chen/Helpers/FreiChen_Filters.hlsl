#ifndef FREI_CHEN_FILTERS
#define FREI_CHEN_FILTERS
// https://www.rasterGrid.com/bloG/2011/01/frei-chen-edge-detector/

/*        Horizontal Gradient
 *         ┌────┬────┬────┐
 *         │  1 │ √2 │  1 │
 *     1   ├────┼────┼────┤
 *   ───── │  0 │  0 │  0 │
 *   2√(2) ├────┼────┼────┤
 *         │ -1 │-√2 │ -1 │
 *         └────┴────┴────┘
 */
static float3x3 G0 =
{
   0.3535534,   0.5,  0.3535534,
   0,             0,          0,  
   -0.3535534, -0.5, -0.3535534
};

/*         Vertical Gradient
 *         ┌────┬────┬────┐
 *         │  1 │  0 │ -1 │
 *     1   ├────┼────┼────┤
 *   ───── │ √2 │  0 │-√2 │
 *   2√(2) ├────┼────┼────┤
 *         │  1 │  0 │ -1 │
 *         └────┴────┴────┘
 */
static float3x3 G1 =
{
    0.3535534,   0.5, -0.3535534,
    0.5,           0,       -0.5,
    0.3535534,  -0.5, -0.3535534 
};

/*          Vertical Ripple
 *         ┌────┬────┬────┐
 *         │  0 │ -1 │ √2 │
 *     1   ├────┼────┼────┤
 *   ───── │  1 │  0 │ -1 │
 *   2√(2) ├────┼────┼────┤
 *         │-√2 │  1 │  0 │
 *         └────┴────┴────┘
 */
static float3x3 G2 =
{
     0.0,      -0.3535534, 0.5,
     0.3535534, 0.0,      -0.3535534,
    -0.5,       0.3535534, 0.0
};

/*         Horizontal Ripple                 
 *         ┌────┬────┬────┐              
 *         │ √2 │ -1 │  0 │              
 *     1   ├────┼────┼────┤              
 *   ───── │ -1 │  0 │  1 │              
 *   2√(2) ├────┼────┼────┤              
 *         │  0 │  1 │-√2 │              
 *         └────┴────┴────┘
 */
static float3x3 G3 =
{
     0.5,       -0.3535534,  0.5,     
    -0.3535534,  0,          0.3535534,
     0,          0.3535534, -0.5
};

/*           Vertical Line                
 *         ┌────┬────┬────┐              
 *         │  0 │  1 │  0 │              
 *     1   ├────┼────┼────┤              
 *    ───  │ -1 │  0 │ -1 │              
 *     2   ├────┼────┼────┤              
 *         │  0 │  1 │  0 │              
 *         └────┴────┴────┘
 */
static float3x3 G4 =
{
     0.0,  0.5,  0.0,
    -0.5,  0.0, -0.5,
     0.0,  0.5,  0.0
};

/*       Horizontal Line                
 *       ┌────┬────┬────┐              
 *       │ -1 │  0 │  1 │              
 *   1   ├────┼────┼────┤              
 *  ───  │  0 │  0 │  0 │              
 *   2   ├────┼────┼────┤              
 *       │  1 │  0 │ -1 │              
 *       └────┴────┴────┘
 */
static float3x3 G5 =
{
    -0.5,  0.0,  0.5,
     0.0,  0.0,  0.0,
     0.5,  0.0, -0.5
};

/*   Vertical Discrete Laplacian                 
 *       ┌────┬────┬────┐              
 *       │  1 │ -2 │  1 │              
 *   1   ├────┼────┼────┤              
 *  ───  │ -2 │  4 │ -2 │              
 *   6   ├────┼────┼────┤              
 *       │  1 │ -2 │  1 │              
 *       └────┴────┴────┘
 */
static float3x3 G6 =
{
    0.1666667, -0.3333333,  0.1666667,
    -0.3333333, 0.6666667, -0.3333333,
    0.1666667, -0.3333333,  0.1666667 
};

/*
 *  Horizontal Discrete Laplacian                
 *       ┌────┬────┬────┐              
 *       │ -2 │  1 │ -2 │              
 *   1   ├────┼────┼────┤              
 *  ───  │  1 │  4 │  1 │              
 *   6   ├────┼────┼────┤              
 *       │ -2 │  1 │ -2 │              
 *       └────┴────┴────┘              
 */
static float3x3 G7 =
{
    -0.3333333, 0.1666667, -0.3333333,
     0.1666667, 0.6666667,  0.1666667,
    -0.3333333, 0.1666667, -0.3333333
};

/*       Constant Area                 
 *      ┌────┬────┬────┐              
 *      │  1 │  1 │  1 │              
 *   1  ├────┼────┼────┤              
 *  ─── │  1 │  1 │  1 │              
 *   3  ├────┼────┼────┤              
 *      │  1 │  1 │  1 │              
 *      └────┴────┴────┘              
 */
static float3x3 G8 =
{
    0.3333333, 0.3333333, 0.3333333,
    0.3333333, 0.3333333, 0.3333333,
    0.3333333, 0.3333333, 0.3333333 
};

// static float3x3 G[9] =
// {
//     G0, G1, G2,
//     G3, G4, G5,
//     G6, G7, G8  
// };


/*
static float3x3 g0 = float3x3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );
static float3x3 g1 = float3x3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );
static float3x3 g2 = float3x3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );
static float3x3 g3 = float3x3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );
static float3x3 g4 = float3x3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );
static float3x3 g5 = float3x3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );
static float3x3 g6 = float3x3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );
static float3x3 g7 = float3x3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );
static float3x3 g8 = float3x3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );

static float3x3 g[9] =
{
     g0, g1, g2,
     g3, g4, g5,
     g6, g7, g8  
};
*/
#endif