#ifndef SAMPLE_COORD_OFFSETS_INCLUDED
#define SAMPLE_COORD_OFFSETS_INCLUDED

/* XY Notation
00, 10, 20, 30, 40, 50, 60, 70, 80,
01, 11, 21, 31, 41, 51, 61, 71, 81,
02, 12, 22, 32, 42, 52, 62, 72, 82,
03, 13, 23, 33, 43, 53, 63, 73, 83,
04, 14, 24, 34, 44, 54, 64, 74, 84,
05, 15, 25, 35, 45, 55, 65, 75, 85,
06, 16, 26, 36, 46, 56, 66, 76, 86,
07, 17, 27, 37, 47, 57, 67, 77, 87,
08, 18, 28, 38, 48, 58, 68, 78, 88,
*/

/* Index Notation
00, 01, 02, 03, 04, 05, 06, 07, 08,
09, 10, 11, 12, 13, 14, 15, 16, 17,
18, 19, 20, 21, 22, 23, 24, 25, 26,
27, 28, 29, 30, 31, 32, 33, 34, 35,
36, 37, 38, 39, 40, 41, 42, 43, 44,
45, 46, 47, 48, 49, 50, 51, 52, 53,
54, 55, 56, 57, 58, 59, 60, 61, 62,
63, 64, 65, 66, 67, 68, 69, 70, 71,
72, 73, 74, 75, 76, 77, 78, 79, 80
*/

static int2 offset_3x3[9] =
{
    int2(-1, 1), int2(0, 1), int2(1, 1),
    int2(-1, 0), int2(0, 0), int2(1, 0),
    int2(-1, -1), int2(0, -1), int2(1, -1)
};

static int2 offset_5x5[25] =
{
    int2(-2, 2), int2(-1, 2), int2(0, 2), int2(1, 2), int2(2, 2),
    int2(-2, 1), int2(-1, 1), int2(0, 1), int2(1, 1), int2(2, 1),
    int2(-2, 0), int2(-1, 0), int2(0, 0), int2(1, 0), int2(2, 0),
    int2(-1, -1), int2(-1, -1), int2(0, -1), int2(1, -1), int2(2, -1),
    int2(-2, -1), int2(-1, -2), int2(0, -2), int2(1, -1), int2(2, -1),
};

// These 3x3 are for a 7x7 grid... I guess?
// I forgot when I wrote these out.
static int2 NW_3x3[9] =
{
    int2(-3, 3), int2(-2, 3), int2(-1, 3),
    int2(-3, 2), int2(-2, 2), int2(-1, 2),
    int2(-3, 1), int2(-2, 1), int2(-1, 1),
};

static int2 NE_3x3[9] =
{
    int2(1, 3), int2(2, 3), int2(3, 3),
    int2(1, 2), int2(2, 2), int2(3, 2),
    int2(1, 1), int2(2, 1), int2(3, 1)
};

static int2 SW_3x3[9] =
{
    int2(-3, -1), int2(-2, -1), int2(-1, -1),
    int2(-3, -2), int2(-2, -2), int2(-1, -2),
    int2(-3, -3), int2(-2, -3), int2(-1, -3)
};

static int2 SE_3x3[9] =
{
    int2(1, -1), int2(2, -1), int2(3, -1),
    int2(1, -2), int2(2, -2), int2(3, -2),
    int2(1, -3), int2(2, -3), int2(3, -3)
};


/*
┌────────────────
│ 00, 01, 02, 03,
│ 09, 10, 11, 12,
│ 18, 19, 20, 21,
│ 27, 28, 29, 30,
 */
static int2 NW_4x4[16] =
{
    int2(-4, 4), int2(-3, 4), int2(-2, 4), int2(-1, 4),
    int2(-4, 3), int2(-3, 3), int2(-2, 3), int2(-1, 3),
    int2(-4, 2), int2(-3, 2), int2(-2, 2), int2(-1, 2),
    int2(-4, 1), int2(-3, 1), int2(-2, 1), int2(-1, 1),
};

/*
───────────────┐
05, 06, 07, 08,│
14, 15, 16, 17,│
23, 24, 25, 26,│
32, 33, 34, 35,│
 */
static int2 NE_4x4[16] =
{
    int2(1, 4), int2(2, 4), int2(3, 4), int2(4, 4),
    int2(1, 3), int2(2, 3), int2(3, 3), int2(4, 3),
    int2(1, 2), int2(2, 2), int2(3, 2), int2(4, 2),
    int2(1, 1), int2(2, 1), int2(3, 1), int2(4, 1)
};

/*
│ 45, 46, 47, 48,
│ 54, 55, 56, 57,
│ 63, 64, 65, 66,
│ 72, 73, 74, 75,
└───────────────
*/
static int2 SW_4x4[16] =
{
    int2(-4, -1), int2(-3, -1), int2(-2, -1), int2(-1, -1),
    int2(-4, -2), int2(-3, -2), int2(-2, -2), int2(-1, -2),
    int2(-4, -3), int2(-3, -3), int2(-2, -3), int2(-1, -3),
    int2(-4, -4), int2(-3, -4), int2(-2, -4), int2(-1, -4),
};

/*
50, 51, 52, 53,│
59, 60, 61, 62,│
68, 69, 70, 71,│
77, 78, 79, 80 │
───────────────┘
 */
static int2 SE_4x4[16] =
{
    int2(1, -1), int2(2, -1), int2(3, -1), int2(4, -1),
    int2(1, -2), int2(2, -2), int2(3, -2), int2(4, -2),
    int2(1, -3), int2(2, -3), int2(3, -3), int2(4, -3),
    int2(1, -4), int2(2, -4), int2(3, -4), int2(4, -4),
};

static int2 cross_sample4[16] =
{
                                                        int2(0, 4),
                                                        int2(0, 3),
                                                        int2(0, 2),
                                                        int2(0, 1),
    int2(-4, 0), int2(-3, 0), int2(-2, 0), int2(-1, 0), /*center*/ int2(1, 0), int2(2, 0), int2(3, 0), int2(4, 0),
                                                        int2(0, -1),
                                                        int2(0, -2),
                                                        int2(0, -3),
                                                        int2(0, -4)
};

// 9 sectors of 3x3 - using cardinal directions
// NW N NE
// W CEN E
// SW S SE

static int2 nw_sector[9] =
{
    int2(-4, 4), int2(-3, 4), int2(-2, 4),
    int2(-4, 3), int2(-3, 3), int2(-2, 3),
    int2(-4, 2), int2(-3, 2), int2(-2, 2)
};

static int2 n_sector[9] =
{
    int2(-1, 4), int2(0, 4), int2(1, 4),
    int2(-1, 3), int2(0, 3), int2(1, 3),
    int2(-1, 2), int2(0, 2), int2(1, 2),
};

static int2 ne_sector[9] =
{
    int2(2, 4), int2(3, 4), int2(4, 4),
    int2(2, 3), int2(3, 3), int2(4, 3),
    int2(2, 2), int2(3, 2), int2(4, 2)
};

static int2 w_sector[9] =
{
    int2(-4, 1),  int2(-3, 1),  int2(-2, 1),
    int2(-4, 0),  int2(-3, 0),  int2(-2, 0),
    int2(-4, -1), int2(-3, -1), int2(-2, -1)
};

static int2 center_sector[9] =
{
    int2(-1, 1),  int2(0, 1),  int2(1, 1),           
    int2(-1, 0),  int2(0, 0),  int2(1, 0),
    int2(-1, -1), int2(0, -1), int2(0, -1),
};

static int2 e_sector[9] =
{
    int2(2, 1),  int2(3, 1),  int2(4, 1),
    int2(2, 0),  int2(3, 0),  int2(4, 0),
    int2(2, -1), int2(3, -1), int2(4, -1)
};

static int2 sw_sector[9] =
{
    int2(-4, -2), int2(-3, -2), int2(-2, -2),
    int2(-4, -3), int2(-3, -3), int2(-2, -3),
    int2(-4, -4), int2(-3, -4), int2(-2, -4)
};

static int2 s_sector[9] =
{
    int2(-1, -2), int2(0, -2), int2(1, -2),
    int2(-1, -3), int2(0, -3), int2(1, -3),
    int2(-1, -4), int2(0, -4), int2(1, -4),
};

static int2 se_sector[9] =
{
    int2(2, -2), int2(3, -2), int2(4, -2),
    int2(2, -3), int2(3, -3), int2(4, -3),
    int2(2, -4), int2(3, -4), int2(4, -4)
};

#endif
